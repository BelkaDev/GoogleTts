#!/bin/bash
#!/usr/bin/env bash
##########################################
# Author: belkadev <https://github.com/belkadev/>
# Description: google translation cli tool
# Usage: $0 [source] [target] [text]
# Examples:
# $0 to de "send me a dime"
# $0 ピカチュウ
# $0 
# no parameters will translate current selection to your default language
# missing: definitions and synonyms in source language
# Requires:  jq, xclip (optional)
##########################################
########Default config##########
##############################
#######
source_language="auto"
target_language="en-us"
##############################
################################

while [ "$#" -gt 1 ]; do
  case "$1" in
    from) source_language="$2";shift;;
    to) target_language="$2";shift;;
    *)  echo "couldn't parse parameters" && exit 1
  esac
  shift
done
if [ -n "$1" ]; then
query="$1"
else
query="$(echo "$(xclip -o)")"
fi
echo ""
response=$(curl --data-urlencode "q=$query" -sA "ff" https://translate.google.com/translate_a/single\?client\=webapp\&sl\=$source_language\&tl\=$target_language\&hl\=en\&dt\=at\&dt\=bd\&dt\=ex\&dt\=ld\&dt\=md\&dt\=qca\&dt\=rw\&dt\=rm\&dt\=sos\&dt\=ss\&dt\=t\&dt\=gt\&source\=bh\&ssel\=0\&tsel\=0\&xid\=1791807%2C45625687%22C45626150\&kc\=1\&tk)
translation=$(echo "$response" | jq -c '.[0]' | jq -c '.[0]' | jq -c '.[0]')
lang=$(echo "$response"  | jq -c '.[2]' )
echo "source_lang:${lang:1:-1}"
echo "target_lang:${target_language}"
echo "source_text:${query}"
echo "translation:${translation:1:-1}"
echo ""


check=$(echo "$response"  | jq '.[1]' | jq length)
if (( $check > 0 )); then
ntranslation_type=$(echo "$response" | jq '.[1]' |  jq '.[]' | jq '.[0]' | wc -l) 
echo "TRANSLATIONS:"
echo "-------------"
for (( j = 0; j < $ntranslation_type; j++ )); do
(( tempj = j + 1 ))
translation_type=$(echo "$response" | jq '.[1]' | jq '.[]' | jq '.[0]' | head -$tempj | tail -1 )
# expressions -------------------------------noun
ntranslations=$(echo "$response" | jq '.[1]' | jq --argjson j "$j" '.[$j]' | jq '.[1]' | jq length) # noun only
echo "	${translation_type:1:-1}: $ntranslations"
for (( i = 0; i < $ntranslations; i++ )); do
test=$(echo "$response" | jq '.[1]' | jq --argjson j "$j" '.[$j]' | jq '.[2]' | jq --argjson i "$i" '.[$i]' | jq '.[1]' )

translations=$(echo "$response" | jq '.[1]' | jq --argjson j "$j" '.[$j]' | jq '.[1]' | jq --argjson i "$i" '.[$i]')
# loop over each translation 
#########################
#########################

#nexamples=echo $ok | jq '.[1]' | jq '.[0]' | jq '.[]' | jq '.[0]' | jq '.[]' # single translation + synonyms
parsed=$(echo "$translations" | sed 's/<[^>]*>//g')
output=$(printf $translation:"\n${test:0}")
test=$(echo $test | sed 's/"//g' | tr -s " ")
echo "	$i: ${translations:1:-1}: (${test:2:-2})"
done
done
fi
#synonym=echo $ok | jq '.[1]' | jq '.[0]' | jq '.[]' | jq '.[0]' | jq '.[loop through translations to get each of their synonyms]' 
nexamples=$(echo "$response" | jq '.[13]' | jq '.[0]' | jq length )
if (( $nexamples > 0 )); then
echo ""
echo "EXAMPLES:"
echo "---------"
# expressions 
for (( i = 0; i < $nexamples; i++ )); do
example=$(echo "$response" | jq '.[13]' | jq '.[0]'  | jq  --argjson i "$i" '.[$i]' | jq '.[0]' )
parsed=$(echo "$example" | sed 's/<[^>]*>//g')
echo "	$i: ${parsed:1:-1}"
done
fi
